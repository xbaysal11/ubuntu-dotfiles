{"version":3,"sources":["../../webpack/bootstrap","../.././node_modules/mime-db/index.js","../.././node_modules/statuses/index.js","../../external \"zlib\"","../.././node_modules/bytes/index.js","../../external \"stream\"","../.././node_modules/koa-compress/index.js","../.././node_modules/compressible/index.js","../.././node_modules/koa-is-json/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","codes","status","code","Error","TypeError","parseInt","isNaN","toLowerCase","STATUS_CODES","statuses","arr","keys","forEach","message","Number","push","populateStatusesMap","redirect","300","301","302","303","305","307","308","empty","204","205","304","retry","502","503","504","require","options","parse","format","formatThousandsRegExp","formatDecimalsRegExp","map","b","kb","mb","gb","tb","Math","pow","pb","parseRegExp","isFinite","mag","abs","thousandsSeparator","unitSeparator","decimalPlaces","undefined","fixedDecimals","Boolean","unit","str","toFixed","replace","val","floatValue","results","exec","parseFloat","floor","compressible","isJSON","Stream","bytes","zlib","encodingMethods","gzip","createGzip","deflate","createDeflate","filter","threshold","async","ctx","next","vary","body","res","headersSent","writable","compress","request","method","response","type","encoding","acceptsEncodings","throw","JSON","stringify","length","set","removeHeader","stream","pipe","end","db","COMPRESSIBLE_TYPE_REGEXP","EXTRACT_TYPE_REGEXP","match","mime","data","test","Buffer","isBuffer"],"mappings":"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","file":"node_modules/koa-compress.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 944);\n","/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n","/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar codes = require('./codes.json')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = status\n\n// status code to message map\nstatus.STATUS_CODES = codes\n\n// array of status codes\nstatus.codes = populateStatusesMap(status, codes)\n\n// status codes for redirects\nstatus.redirect = {\n  300: true,\n  301: true,\n  302: true,\n  303: true,\n  305: true,\n  307: true,\n  308: true\n}\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true,\n  205: true,\n  304: true\n}\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true,\n  503: true,\n  504: true\n}\n\n/**\n * Populate the statuses map for given codes.\n * @private\n */\n\nfunction populateStatusesMap (statuses, codes) {\n  var arr = []\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // Populate properties\n    statuses[status] = message\n    statuses[message] = status\n    statuses[message.toLowerCase()] = status\n\n    // Add to array\n    arr.push(status)\n  })\n\n  return arr\n}\n\n/**\n * Get the status code.\n *\n * Given a number, this will throw if it is not a known status\n * code, otherwise the code will be returned. Given a string,\n * the string will be parsed for a number and return the code\n * if valid, otherwise will lookup the code assuming this is\n * the status message.\n *\n * @param {string|number} code\n * @returns {number}\n * @public\n */\n\nfunction status (code) {\n  if (typeof code === 'number') {\n    if (!status[code]) throw new Error('invalid status code: ' + code)\n    return code\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    if (!status[n]) throw new Error('invalid status code: ' + n)\n    return n\n  }\n\n  n = status[code.toLowerCase()]\n  if (!n) throw new Error('invalid status message: \"' + code + '\"')\n  return n\n}\n","module.exports = require(\"zlib\");","/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: Math.pow(1024, 4),\n  pb: Math.pow(1024, 5),\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string],\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value, options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value, options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.pb) {\n      unit = 'PB';\n    } else if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.replace(formatThousandsRegExp, thousandsSeparator);\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n","module.exports = require(\"stream\");","'use strict'\n\n/**\n * Module dependencies.\n */\n\nconst compressible = require('compressible')\nconst isJSON = require('koa-is-json')\nconst status = require('statuses')\nconst Stream = require('stream')\nconst bytes = require('bytes')\nconst zlib = require('zlib')\n\n/**\n * Encoding methods supported.\n */\n\nconst encodingMethods = {\n  gzip: zlib.createGzip,\n  deflate: zlib.createDeflate\n}\n\n/**\n * Compress middleware.\n *\n * @param {Object} [options]\n * @return {Function}\n * @api public\n */\n\nmodule.exports = (options = {}) => {\n  let { filter = compressible, threshold = 1024 } = options\n  if (typeof threshold === 'string') threshold = bytes(threshold)\n\n  return async (ctx, next) => {\n    ctx.vary('Accept-Encoding')\n\n    await next()\n\n    let { body } = ctx\n    if (!body) return\n    if (ctx.res.headersSent || !ctx.writable) return\n    if (ctx.compress === false) return\n    if (ctx.request.method === 'HEAD') return\n    if (status.empty[ctx.response.status]) return\n    if (ctx.response.get('Content-Encoding')) return\n\n    // forced compression or implied\n    if (!(ctx.compress === true || filter(ctx.response.type))) return\n\n    // identity\n    const encoding = ctx.acceptsEncodings('gzip', 'deflate', 'identity')\n    if (!encoding) ctx.throw(406, 'supported encodings: gzip, deflate, identity')\n    if (encoding === 'identity') return\n\n    // json\n    if (isJSON(body)) body = ctx.body = JSON.stringify(body)\n\n    // threshold\n    if (threshold && ctx.response.length < threshold) return\n\n    ctx.set('Content-Encoding', encoding)\n    ctx.res.removeHeader('Content-Length')\n\n    const stream = ctx.body = encodingMethods[encoding](options)\n\n    if (body instanceof Stream) {\n      body.pipe(stream)\n    } else {\n      stream.end(body)\n    }\n  }\n}\n","/*!\n * compressible\n * Copyright(c) 2013 Jonathan Ong\n * Copyright(c) 2014 Jeremiah Senkpiel\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\n\n/**\n * Module variables.\n * @private\n */\n\nvar COMPRESSIBLE_TYPE_REGEXP = /^text\\/|\\+(?:json|text|xml)$/i\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = compressible\n\n/**\n * Checks if a type is compressible.\n *\n * @param {string} type\n * @return {Boolean} compressible\n * @public\n */\n\nfunction compressible (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // strip parameters\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && match[1].toLowerCase()\n  var data = db[mime]\n\n  // return database information\n  if (data && data.compressible !== undefined) {\n    return data.compressible\n  }\n\n  // fallback to regexp or unknown\n  return COMPRESSIBLE_TYPE_REGEXP.test(mime) || undefined\n}\n","\nmodule.exports = isJSON;\n\n/**\n * Check if `body` should be interpreted as json.\n */\n\nfunction isJSON(body) {\n  if (!body) return false;\n  if ('string' == typeof body) return false;\n  if ('function' == typeof body.pipe) return false;\n  if (Buffer.isBuffer(body)) return false;\n  return true;\n}\n"],"sourceRoot":""}